# -*- coding: utf-8 -*-
"""iFacts Voice Skill"""

import random
import logging

from ask_sdk_core.skill_builder import SkillBuilder
from ask_sdk_core.dispatch_components import (
    AbstractRequestHandler, AbstractExceptionHandler,
    AbstractRequestInterceptor, AbstractResponseInterceptor)
from ask_sdk_core.utils import is_request_type, is_intent_name
from ask_sdk_core.handler_input import HandlerInput

from ask_sdk_model.ui import SimpleCard
from ask_sdk_model import Response


# =========================================================================================================================================
# TODO: The items below this comment need your attention.
# =========================================================================================================================================
SKILL_NAME = "iFacts"
GET_FACT_MESSAGE = "Here's your fact: "
HELP_MESSAGE = "You can say tell me an iFact fact, or, you can say exit... What can I help you with?"
HELP_REPROMPT = "What can I help you with?"
STOP_MESSAGE = "Goodbye!"
FALLBACK_MESSAGE = "The iFacts skill can't help you with that.  It can help you discover facts about Apple if you say tell me an iFact. What can I help you with?"
FALLBACK_REPROMPT = 'What can I help you with?'
EXCEPTION_MESSAGE = "Sorry. I cannot help you with that."

# =========================================================================================================================================
# TODO: Replace this data with your own.  You can find translations of this data at http://github.com/alexa/skill-sample-python-fact/lambda/data
# =========================================================================================================================================

data = [
 "In early 2015, Apple became the first ever $700 billion company. More recently, Apple overtook Google as the most valuable brand in the world.",
    "You might think of them only as fierce competitors, but Apple and Samsung have a different sort of relationship. Samsung actually manufactures the retina display on the Apple iPad and a portion of the memory chips used in the iPhone 6 (though Apple has cut back on its reliance on Samsung).",
    "In June 2014, a seven-for-one stock split took the trading price of Apple from approximately $645 to $94.",
    " One of the original Apple computers sold for more than $387,000 in 2013.",
    " Apple’s initial public offering was made on December 12, 1980. The company sold 4.6 million shares at a cost of $22 per share.",
    "Apple used the capital from its initial public offering for the development of the Macintosh and Lisa.",
    "The iPhone was almost named something else, with the company considering names such as Mobi, Telepod, and Tripod. The name “iPad” was also considered for its smartphone.",
    "China is currently Apple’s second biggest market, trailing only the United States. Revenue in China grew to nearly $17 billion in the second quarter of 2015.",
    "Despite the fact that he was the founder of the company, Steve Jobs was fired from Apple in 1985 at the tender age of 30.",
    "Apple cracked into the Fortune 500 in 1983, a spot it has held onto ever since.",
    "Apple is pretty secretive. The company is said to have created fake projects for employees and management to work on. If the news leaks, you can hit the road. They’ll know exactly who spilled the beans.",
    "It cost $666.66 to build the first Apple computer. Despite the many conspiracy theories, it has not been proven that anybody at Apple worshipped the devil during production.",
    "Fake Apple retail stores have been opened (and shut down) in many parts of China. In Kunming, for example, these stores appeared so authentic that even employees were duped.",
    "Apple CEO Tim Cook earned $9 million in 2014. A large number, for sure, but not when you consider that Apple is the most valuable company in the world.",
    "The original Apple logo was designed by co-founder Ronald Wayne, who worked at Atari along with Steve Jobs and Steve Wozniak, and is nothing like the one the company uses today.",
    "At one point, Apple did not have the option to market its iPhone in Brazil, as another company owned the trademark. IGM Electronics, a telecommunications company, was the thorn in Apple’s side until the iPhone maker won a trademark case in the country.",
    "Ronald Wayne, the forgotten Apple co-founder, sold his shares in the company in 1977 for $800. While he only owned 10 percent of the company at the time, in today’s world this would be worth tens of billions of dollars. He has noted that he does not regret this decision.",
    "Apple finished 2014 with $178 billion in marketable securities and cash. Even so, CEO Tim Cook is persistent in saying the company doesn’t want a cash hoard.",
    "The revenue generated by Apple is more than the GDP of many countries, including Ecuador, Libya, and Iraq (among hundreds of others).",
    "Apple’s profit for every iPhone 6 Plus sold is approximately $85 more than its smaller counterpart.",
    "In 2005, there were 116 Apple retail stores scattered throughout the world, with the largest number in the United States. This total reached 317 by 2010 and 437 by 2014. The number of Apple stores has increased each year since 2005. Want to go work at one? Good luck–you have a better chance of getting into Harvard!",
]

# =========================================================================================================================================
# Editing anything below this line might break your skill.
# =========================================================================================================================================

sb = SkillBuilder()
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)


# Built-in Intent Handlers
class GetNewFactHandler(AbstractRequestHandler):
    """Handler for Skill Launch and GetNewFact Intent."""
    def can_handle(self, handler_input):
        # type: (HandlerInput) -> bool
        return (is_request_type("LaunchRequest")(handler_input) or
                is_intent_name("GetNewSpaceFactIntent")(handler_input))

    def handle(self, handler_input):
        # type: (HandlerInput) -> Response
        logger.info("In GetNewFactHandler")

        random_fact = random.choice(data)
        speech = GET_FACT_MESSAGE + random_fact

        handler_input.response_builder.speak(speech).set_card(
            SimpleCard(SKILL_NAME, random_fact))
        return handler_input.response_builder.response


class HelpIntentHandler(AbstractRequestHandler):
    """Handler for Help Intent."""
    def can_handle(self, handler_input):
        # type: (HandlerInput) -> bool
        return is_intent_name("AMAZON.HelpIntent")(handler_input)

    def handle(self, handler_input):
        # type: (HandlerInput) -> Response
        logger.info("In HelpIntentHandler")

        handler_input.response_builder.speak(HELP_MESSAGE).ask(
            HELP_REPROMPT).set_card(SimpleCard(
                SKILL_NAME, HELP_MESSAGE))
        return handler_input.response_builder.response


class CancelOrStopIntentHandler(AbstractRequestHandler):
    """Single handler for Cancel and Stop Intent."""
    def can_handle(self, handler_input):
        # type: (HandlerInput) -> bool
        return (is_intent_name("AMAZON.CancelIntent")(handler_input) or
                is_intent_name("AMAZON.StopIntent")(handler_input))

    def handle(self, handler_input):
        # type: (HandlerInput) -> Response
        logger.info("In CancelOrStopIntentHandler")

        handler_input.response_builder.speak(STOP_MESSAGE)
        return handler_input.response_builder.response


class FallbackIntentHandler(AbstractRequestHandler):
    """Handler for Fallback Intent.

    AMAZON.FallbackIntent is only available in en-US locale.
    This handler will not be triggered except in that locale,
    so it is safe to deploy on any locale.
    """
    def can_handle(self, handler_input):
        # type: (HandlerInput) -> bool
        return is_intent_name("AMAZON.FallbackIntent")(handler_input)

    def handle(self, handler_input):
        # type: (HandlerInput) -> Response
        logger.info("In FallbackIntentHandler")

        handler_input.response_builder.speak(FALLBACK_MESSAGE).ask(
            FALLBACK_REPROMPT)
        return handler_input.response_builder.response


class SessionEndedRequestHandler(AbstractRequestHandler):
    """Handler for Session End."""
    def can_handle(self, handler_input):
        # type: (HandlerInput) -> bool
        return is_request_type("SessionEndedRequest")(handler_input)

    def handle(self, handler_input):
        # type: (HandlerInput) -> Response
        logger.info("In SessionEndedRequestHandler")

        logger.info("Session ended reason: {}".format(
            handler_input.request_envelope.request.reason))
        return handler_input.response_builder.response


# Exception Handler
class CatchAllExceptionHandler(AbstractExceptionHandler):
    """Catch all exception handler, log exception and
    respond with custom message.
    """
    def can_handle(self, handler_input, exception):
        # type: (HandlerInput, Exception) -> bool
        return True

    def handle(self, handler_input, exception):
        # type: (HandlerInput, Exception) -> Response
        logger.info("In CatchAllExceptionHandler")
        logger.error(exception, exc_info=True)

        handler_input.response_builder.speak(EXCEPTION_MESSAGE).ask(
            HELP_REPROMPT)

        return handler_input.response_builder.response


# Request and Response loggers
class RequestLogger(AbstractRequestInterceptor):
    """Log the alexa requests."""
    def process(self, handler_input):
        # type: (HandlerInput) -> None
        logger.debug("Alexa Request: {}".format(
            handler_input.request_envelope.request))


class ResponseLogger(AbstractResponseInterceptor):
    """Log the alexa responses."""
    def process(self, handler_input, response):
        # type: (HandlerInput, Response) -> None
        logger.debug("Alexa Response: {}".format(response))


# Register intent handlers
sb.add_request_handler(GetNewFactHandler())
sb.add_request_handler(HelpIntentHandler())
sb.add_request_handler(CancelOrStopIntentHandler())
sb.add_request_handler(FallbackIntentHandler())
sb.add_request_handler(SessionEndedRequestHandler())

# Register exception handlers
sb.add_exception_handler(CatchAllExceptionHandler())

# TODO: Uncomment the following lines of code for request, response logs.
# sb.add_global_request_interceptor(RequestLogger())
# sb.add_global_response_interceptor(ResponseLogger())

# Handler name that is used on AWS lambda
lambda_handler = sb.lambda_handler()
